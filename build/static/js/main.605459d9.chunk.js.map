{"version":3,"sources":["component/ChampionList/ChampionList.js","component/Champion/Champion.js","component/Banner/Banner.js","component/Main/Main.js","component/Search/Search.js","component/Navigation/Navigation.js","component/ScrollArrow/ScrollArrow.js","component/App/App.js","serviceWorker.js","index.js"],"names":["ChampionList","useState","championList","setChampionList","useEffect","fetch","then","res","json","champion","champArr","champ","data","push","showChampion","map","champions","championImg","id","to","className","key","name","src","alt","title","Champion","props","setChamp","chartData","setChartData","match","params","api","champs","champStats","statValues","stats","Object","keys","values","labels","datasets","label","backgroundColor","pointBackgroundColor","borderWidth","chart","displayChamp","championSplash","champPassive","passive","image","full","champQ","spells","champW","champE","champR","lore","description","Banner","Main","champClicked","setChampClicked","console","log","handleClick","exact","path","render","routerProps","Search","Form","inline","FormControl","type","placeholder","Navigation","Navbar","expand","bg","variant","fixed","Brand","href","Nav","ScrollArrow","showScroll","setShowScroll","window","addEventListener","pageYOffset","onClick","scrollTo","top","behavior","style","height","display","App","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"6PA8CeA,G,MAxCM,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACnBC,EADmB,KACLC,EADK,KAIvBC,qBAAU,WACNC,MAHa,2EAIRC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEH,IAAIC,EAAW,GACf,IAAK,IAAMC,KAASF,EAASG,KACzBF,EAASG,KAAKJ,EAASG,KAAKD,IAEhCR,EAAgBO,QAEzB,IAGH,IAAMI,EAAeZ,EAAaa,KAAI,SAAAC,GAElC,IAAMC,EAAW,sEAAkED,EAAUE,GAA5E,QAEjB,OACL,kBAAC,IAAD,CAAMC,GAAI,cAAgBH,EAAUE,IACnC,yBAAKE,UAAU,WAAWC,IAAKL,EAAUE,IACxC,4BAAKF,EAAUM,MACf,yBAAKC,IAAKN,EAAaO,IAAI,KAC3B,4BAAKR,EAAUS,YAMnB,OACC,yBAAKL,UAAU,sBACbN,K,gBC8FWY,EAnIE,SAACC,GAAW,IAAD,EACD1B,mBAAS,IADR,mBACpBU,EADoB,KACbiB,EADa,OAEO3B,mBAAS,IAFhB,mBAEpB4B,EAFoB,KAETC,EAFS,KAQ3B1B,qBAAU,WACT,IAAMK,EAAWkB,EAAMI,MAAMC,OAAOrB,MAC9BsB,EAAG,6EAAyExB,EAAzE,SAETJ,MAAM4B,GACJ3B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC4B,GAEN,IAAIxB,EAAW,GACf,IAAK,IAAMC,KAASuB,EAAOtB,KAC1BF,EAASG,KAAKqB,EAAOtB,KAAKD,IAE3BiB,EAASlB,QAGT,CAACiB,EAAMI,MAAMC,OAAOrB,QAsCvBP,qBAAU,YApCI,WACb,IAAMK,EAAWkB,EAAMI,MAAMC,OAAOrB,MAC9BsB,EAAG,6EAAyExB,EAAzE,SAETJ,MAAM4B,GACJ3B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC4B,GAEN,IAAIxB,EAAW,GACXyB,EAAa,GACbC,EAAa,GACjB,IAAK,IAAMzB,KAASuB,EAAOtB,KAC1BF,EAASG,KAAKqB,EAAOtB,KAAKD,IAC1BwB,EAAWtB,KAAKqB,EAAOtB,KAAMD,GAAO0B,OACpCF,EAAaG,OAAOC,KAAKJ,EAAW,IACpCC,EAAWvB,KAAKqB,EAAOtB,KAAKD,GAAO0B,OACnCD,EAAaE,OAAOE,OAAOJ,EAAW,IAEvCR,EAASlB,GACToB,EAAa,CACZW,OAAQN,EACRO,SAAU,CACT,CACCC,MAAO,iBACP/B,KAAMwB,EACNQ,gBAAiB,yBACjBC,qBAAsB,yBACtBC,YAAa,SAUlBC,KACE,IAEH,IAAMC,EAAerC,EAAMI,KAAI,SAACN,GAC/B,IAAMwC,EAAc,qEAAiExC,EAASS,GAA1E,UACdgC,EAAY,qEAAiEzC,EAAS0C,QAAQC,MAAMC,MACpGC,EAAM,mEAA+D7C,EAAS8C,OAAO,GAAGH,MAAMC,MAC9FG,EAAM,mEAA+D/C,EAAS8C,OAAO,GAAGH,MAAMC,MAC9FI,EAAM,mEAA+DhD,EAAS8C,OAAO,GAAGH,MAAMC,MAC9FK,EAAM,mEAA+DjD,EAAS8C,OAAO,GAAGH,MAAMC,MAEpG,OACC,yBAAKhC,IAAKZ,EAASS,IAClB,wBAAIE,UAAU,cACZX,EAASa,KADX,KACmBb,EAASgB,OAE5B,yBAAKF,IAAK0B,EAAgBzB,IAAI,KAC9B,qCACA,6BACC,kBAAC,QAAD,CAAOZ,KAAMiB,KAEd,oCACA,yBAAKT,UAAU,cACd,2BAAIX,EAASkD,OAEd,sCACA,yBAAKvC,UAAU,UACd,yBAAKA,UAAU,cACd,uCACA,yBAAKG,IAAK2B,EAAc1B,IAAI,KAC5B,uBAAGJ,UAAU,cAAcX,EAAS0C,QAAQ7B,MAC5C,2BAAIb,EAAS0C,QAAQS,cAEtB,yBAAKxC,UAAU,cACd,iCACA,yBAAKG,IAAK+B,EAAQ9B,IAAI,KACtB,uBAAGJ,UAAU,cAAcX,EAAS8C,OAAO,GAAGjC,MAC9C,2BAAIb,EAAS8C,OAAO,GAAGK,cAExB,yBAAKxC,UAAU,cACd,iCACA,yBAAKG,IAAKiC,EAAQhC,IAAI,KACtB,uBAAGJ,UAAU,cAAcX,EAAS8C,OAAO,GAAGjC,MAC9C,2BAAIb,EAAS8C,OAAO,GAAGK,cAExB,yBAAKxC,UAAU,cACd,iCACA,yBAAKG,IAAKkC,EAAQjC,IAAI,KACtB,uBAAGJ,UAAU,cAAcX,EAAS8C,OAAO,GAAGjC,MAC9C,2BAAIb,EAAS8C,OAAO,GAAGK,cAExB,yBAAKxC,UAAU,cACd,iCACA,yBAAKG,IAAKmC,EAAQlC,IAAI,KACtB,uBAAGJ,UAAU,cAAcX,EAAS8C,OAAO,GAAGjC,MAC9C,2BAAIb,EAAS8C,OAAO,GAAGK,mBAO5B,OACC,yBAAKxC,UAAU,iBACb4B,ICvHWa,G,OARA,WACX,OACI,6BACI,yBAAKtC,IAAI,kCAAkCC,IAAI,kBC8B5CsC,EA9BF,WAAO,IAAD,EAEyB7D,mBAAS,MAFlC,mBAER8D,EAFQ,KAEMC,EAFN,KAGfC,QAAQC,IAAIH,GAEZ,IAAMI,EAAc,SAAAxD,GAChBsD,QAAQC,IAAI,WACZF,EAAgBrD,IAGpB,OACI,oCACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CACIA,KAAK,oBACLC,OAAQ,SAAAC,GAAW,OACf,kBAAC,EAAD,eACAJ,YAAaA,GACTI,U,iBCjBbC,EARA,WACX,OACI,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACR,kBAACC,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,uBAAuBzD,UAAU,c,kBCcnE0D,G,OAfI,WAElB,OACC,oCACC,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAOC,MAAM,OAClD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,KAAnB,WACA,kBAACC,EAAA,EAAD,CAAKlE,UAAU,YAGf,kBAAC,EAAD,U,QCkBWmE,G,OA1BK,WAAO,IAAD,EACWtF,oBAAS,GADpB,mBAClBuF,EADkB,KACNC,EADM,KAiBzB,OAFAC,OAAOC,iBAAiB,UAZD,YACjBH,GAAcE,OAAOE,YAAc,IACvCH,GAAc,GACJD,GAAcE,OAAOE,aAAe,KAC9CH,GAAc,MAWf,kBAAC,IAAD,CACCrE,UAAU,YACVyE,QATgB,WACjBH,OAAOI,SAAS,CAAEC,IAAK,EAAGC,SAAU,YASnCC,MAAO,CAAEC,OAAQ,GAAIC,QAASX,EAAa,OAAS,YCVxCY,MAVf,WACC,OACC,yBAAKhF,UAAU,OACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACK,kBAAC,EAAD,QCAYiF,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASxE,MACvB,2D,OCTNyE,IAASlC,OACR,kBAAC,IAAD,KACC,kBAAC,IAAMmC,WAAP,KACC,kBAAC,EAAD,QAGFC,SAASC,eAAe,SDoHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxG,MAAK,SAAAyG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjD,QAAQiD,MAAMA,EAAMC,a","file":"static/js/main.605459d9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport './champion-list.scss'\n// import ChampionModals from '../ChampionModals/ChampionModals'\n// import { Button } from 'react-bootstrap'\n\nconst ChampionList = () => {\n\tconst [championList, setChampionList] = useState([])\n\tconst championApi = 'http://ddragon.leagueoflegends.com/cdn/10.20.1/data/en_US/champion.json'\n\n    useEffect(() => {\n        fetch(championApi)\n            .then((res) => res.json())\n            .then((champion) => {\n                // console.log('this is champion', champion.data)\n                let champArr = []\n                for (const champ in champion.data) {\n                    champArr.push(champion.data[champ])\n                }\n                setChampionList(champArr)\n            })\n    }, [])\n\t// console.log('this is championList', championList)\n    \n    const showChampion = championList.map(champions => {\n        \n        const championImg = `http://ddragon.leagueoflegends.com/cdn/10.20.1/img/champion/${champions.id}.png`\n\n        return (\n\t\t\t<Link to={'/champions/' + champions.id}>\n\t\t\t\t<div className='champion' key={champions.id}>\n\t\t\t\t\t<h3>{champions.name}</h3>\n\t\t\t\t\t<img src={championImg} alt='' />\n\t\t\t\t\t<h3>{champions.title}</h3>\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t)\n    })\n\n\treturn (\n\t\t<div className='champion-container'>\n\t\t\t{showChampion}\n\t\t</div>\n\t)\n}\n\nexport default ChampionList\n","import React, { useEffect, useState } from 'react'\nimport './champion.scss'\nimport {Radar} from 'react-chartjs-2'\n\nconst Champion = (props) => {\n\tconst [champ, setChamp] = useState([])\n\tconst [chartData, setChartData] = useState({})\n\n\t// console.log('state', champ)\n\n\t// console.log('props passed from ChampionList', props)\n\n\tuseEffect(() => {\n\t\tconst champion = props.match.params.champ\n\t\tconst api = `http://ddragon.leagueoflegends.com/cdn/10.20.1/data/en_US/champion/${champion}.json`\n\n\t\tfetch(api)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((champs) => {\n\t\t\t\t// console.log('champs.data', champs.data)\n\t\t\t\tlet champArr = []\n\t\t\t\tfor (const champ in champs.data) {\n\t\t\t\t\tchampArr.push(champs.data[champ])\n\t\t\t\t}\n\t\t\t\tsetChamp(champArr)\n\t\t\t})\n\t\t\n\t}, [props.match.params.champ])\n\n\tconst chart = () => {\n\t\tconst champion = props.match.params.champ\n\t\tconst api = `http://ddragon.leagueoflegends.com/cdn/10.20.1/data/en_US/champion/${champion}.json`\n\n\t\tfetch(api)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((champs) => {\n\t\t\t\t// console.log('champs.data', champs.data)\n\t\t\t\tlet champArr = []\n\t\t\t\tlet champStats = []\n\t\t\t\tlet statValues = []\n\t\t\t\tfor (const champ in champs.data) {\n\t\t\t\t\tchampArr.push(champs.data[champ])\n\t\t\t\t\tchampStats.push(champs.data.[champ].stats)\n\t\t\t\t\tchampStats = Object.keys(champStats[0])\n\t\t\t\t\tstatValues.push(champs.data[champ].stats)\n\t\t\t\t\tstatValues = Object.values(statValues[0])\n\t\t\t\t}\n\t\t\t\tsetChamp(champArr)\n\t\t\t\tsetChartData({\n\t\t\t\t\tlabels: champStats,\n\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Champion Stats',\n\t\t\t\t\t\t\tdata: statValues,\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(155, 192, 255, 1)',\n\t\t\t\t\t\t\tpointBackgroundColor: 'rgba(240, 240, 240, 1)',\n\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t})\n\t\t\t\t// console.log('this is champStats', champStats)\n\t\t\t\t// console.log('this is statValues', statValues)\n\t\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tchart()\n\t}, [])\n\n\tconst displayChamp = champ.map((champion) => {\n\t\tconst championSplash = `http://ddragon.leagueoflegends.com/cdn/img/champion/splash/${champion.id}_0.jpg`\n\t\tconst champPassive = `http://ddragon.leagueoflegends.com/cdn/10.20.1/img/passive/${champion.passive.image.full}`\n\t\tconst champQ = `http://ddragon.leagueoflegends.com/cdn/10.20.1/img/spell/${champion.spells[0].image.full}`\n\t\tconst champW = `http://ddragon.leagueoflegends.com/cdn/10.20.1/img/spell/${champion.spells[1].image.full}`\n\t\tconst champE = `http://ddragon.leagueoflegends.com/cdn/10.20.1/img/spell/${champion.spells[2].image.full}`\n\t\tconst champR = `http://ddragon.leagueoflegends.com/cdn/10.20.1/img/spell/${champion.spells[3].image.full}`\n\n\t\treturn (\n\t\t\t<div key={champion.id}>\n\t\t\t\t<h3 className='champ-name'>\n\t\t\t\t\t{champion.name}, {champion.title}\n\t\t\t\t</h3>\n\t\t\t\t<img src={championSplash} alt='' />\n\t\t\t\t<h4>Stats</h4>\n\t\t\t\t<div>\n\t\t\t\t\t<Radar data={chartData} />\n\t\t\t\t</div>\n\t\t\t\t<h4>Lore</h4>\n\t\t\t\t<div className='spell-desc'>\n\t\t\t\t\t<p>{champion.lore}</p>\n\t\t\t\t</div>\n\t\t\t\t<h4>Spells</h4>\n\t\t\t\t<div className='spells'>\n\t\t\t\t\t<div className='spell-desc'>\n\t\t\t\t\t\t<h4>Passive</h4>\n\t\t\t\t\t\t<img src={champPassive} alt='' />\n\t\t\t\t\t\t<p className='spell-name'>{champion.passive.name}</p>\n\t\t\t\t\t\t<p>{champion.passive.description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='spell-desc'>\n\t\t\t\t\t\t<h4>Q</h4>\n\t\t\t\t\t\t<img src={champQ} alt='' />\n\t\t\t\t\t\t<p className='spell-name'>{champion.spells[0].name}</p>\n\t\t\t\t\t\t<p>{champion.spells[0].description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='spell-desc'>\n\t\t\t\t\t\t<h4>W</h4>\n\t\t\t\t\t\t<img src={champW} alt='' />\n\t\t\t\t\t\t<p className='spell-name'>{champion.spells[1].name}</p>\n\t\t\t\t\t\t<p>{champion.spells[1].description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='spell-desc'>\n\t\t\t\t\t\t<h4>E</h4>\n\t\t\t\t\t\t<img src={champE} alt='' />\n\t\t\t\t\t\t<p className='spell-name'>{champion.spells[2].name}</p>\n\t\t\t\t\t\t<p>{champion.spells[2].description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='spell-desc'>\n\t\t\t\t\t\t<h4>R</h4>\n\t\t\t\t\t\t<img src={champR} alt='' />\n\t\t\t\t\t\t<p className='spell-name'>{champion.spells[3].name}</p>\n\t\t\t\t\t\t<p>{champion.spells[3].description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t})\n\n\treturn (\n\t\t<div className='display-champ'>\n\t\t\t{displayChamp}\n\t\t</div>\n\t)\n}\n\nexport default Champion\n","import React from 'react'\nimport './banner.scss'\n\nconst Banner = () => {\n    return (\n        <div>\n            <img src='https://i.imgur.com/htZVxd2.jpg' alt='lol banner' />\n        </div>\n    )\n}\n\nexport default Banner","import React, {useState} from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport ChampionList from '../ChampionList/ChampionList'\nimport Champion from '../Champion/Champion'\nimport Banner from '../Banner/Banner'\n\nconst Main = () => {\n\n    const [champClicked, setChampClicked] = useState(null)\n    console.log(champClicked)\n\n    const handleClick = champ => {\n        console.log('clicked')\n        setChampClicked(champ)\n    }\n\n    return (\n        <>\n            <Switch>\n                <Route exact path='/'>\n                    <Banner />\n                    <ChampionList />\n                </Route>\n                <Route\n                    path='/champions/:champ'\n                    render={routerProps => (\n                        <Champion\n                        handleClick={handleClick}\n                        {...routerProps} />\n                    )}\n                />\n            </Switch>\n        </>\n    )\n}\n\nexport default Main","import React from 'react'\nimport { Form, FormControl } from 'react-bootstrap'\n\nconst Search = () => {\n    return (\n        <Form inline>\n            <FormControl type='text' placeholder='Search for champions' className='mr-sm-2' />\n        </Form>\n    )\n}\n\nexport default Search","import React from 'react'\nimport Search from '../Search/Search'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport './navigation.scss'\n\nconst Navigation = () => {\n\t// https://i.redd.it/jy350deq13a51.jpg\n\treturn (\n\t\t<>\n\t\t\t<Navbar expand='sm' bg='dark' variant='dark' fixed='top'>\n\t\t\t\t<Navbar.Brand href='/'>LoL App</Navbar.Brand>\n\t\t\t\t<Nav className='mr-auto'>\n\t\t\t\t\t{/* <Nav.Link href='/champions'>Champions</Nav.Link> */}\n\t\t\t\t</Nav>\n\t\t\t\t<Search />\n\t\t\t</Navbar>\n\t\t</>\n\t)\n}\n\nexport default Navigation\n","import React, { useState } from 'react'\nimport { FaArrowCircleUp } from 'react-icons/fa'\nimport './scroll-arrow.scss'\n\n// https://medium.com/better-programming/create-a-scroll-to-top-arrow-using-react-hooks-18586890fedc\n\nconst ScrollArrow = () => {\n\tconst [showScroll, setShowScroll] = useState(false)\n\n\tconst checkScrollTop = () => {\n\t\tif (!showScroll && window.pageYOffset > 400) {\n\t\t\tsetShowScroll(true)\n\t\t} else if (showScroll && window.pageYOffset <= 400) {\n\t\t\tsetShowScroll(false)\n\t\t}\n\t}\n\n\tconst scrollTop = () => {\n\t\twindow.scrollTo({ top: 0, behavior: 'smooth' })\n\t}\n\n\twindow.addEventListener('scroll', checkScrollTop)\n\n\treturn (\n\t\t<FaArrowCircleUp\n\t\t\tclassName='scrollTop'\n\t\t\tonClick={scrollTop}\n\t\t\tstyle={{ height: 40, display: showScroll ? 'flex' : 'none' }}\n\t\t/>\n\t)\n}\n\nexport default ScrollArrow\n","import React from 'react';\nimport './App.scss';\nimport Main from '../Main/Main'\nimport Navigation from '../Navigation/Navigation'\nimport ScrollArrow from '../ScrollArrow/ScrollArrow'\n\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Navigation />\n\t\t\t<Main />\n      \t\t<ScrollArrow />\n\t\t</div>\n\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n\t<Router>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</Router>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}